using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Routing;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using NorthwindShop.BLL.Extensions;
using NorthwindShop.Web.Filters;
using NorthwindShop.Web.Middlware;
using Swashbuckle.AspNetCore.Swagger;

namespace NorthwindShop.Web
{
    public class Startup
    {
        private readonly IConfiguration _configuration;
        private readonly ILogger<Startup> _logger;

        public Startup(IConfiguration configuration,
                       ILogger<Startup> logger)
        {
            _configuration = configuration;
            _logger = logger;
        }

        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddDistributedRedisCache(options =>
            {
                options.Configuration = "localhost";
                options.InstanceName = "NorthwindCacheStorage";
            });
            services.RegisterBllServices(_configuration);
            services.AddMvc(options =>
            {
                var logActionsEnabled = _configuration.GetValue<bool>("Logging:LogActionsEnabled", false);
                if (logActionsEnabled)
                {
                    options.Filters.Add(new LogActionFilter(_logger));
                }
            });

            services.ConfigureApplicationCookie(options =>
            {
                options.LoginPath = "/Account/Login";
                options.AccessDeniedPath = "/Home/404";
            });

            services.AddSwaggerGen(c =>
            {
                c.SwaggerDoc("v1", new Info
                {
                    Version = "v1",
                    Title = "NorthwindShop API",
                    Description = "Northwind shop API description generated by swagger.",
                    Contact = new Contact
                    {
                        Email = "kiryl_kiryanchykau@epam.com",
                        Name = "Kiryl Kiryanchykau"
                    }
                });
            });
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app,
                              IHostingEnvironment env,
                              IApplicationLifetime applicationLifetime)
        {
            applicationLifetime.ApplicationStopping.Register(OnShutDown);

            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                app.UseExceptionHandler("/Error/500");
                app.UseStatusCodePagesWithReExecute("/Home/Error", "?statusCode={0}");
            }

            app.UseMiddleware<CacheImageMiddlware>();
            app.UseStaticFiles();
            app.UseNodeModules(env.ContentRootPath);

            app.UseAuthentication();

            app.UseMvc(ConfigureRoutes);

            app.UseSwagger();
            app.UseSwaggerUI(c => c.SwaggerEndpoint("/swagger/v1/swagger.json", "NorthwindShop API V1"));
        }

        private void ConfigureRoutes(IRouteBuilder routeBuilder)
        {
            routeBuilder.MapRoute("Image", "images/{id:int}",
                defaults: new {controller = "Category", action = "Image"});

            routeBuilder.MapRoute("Default",
                "{controller=Home}/{action=Index}/{id?}");
        }

        private void OnShutDown()
        {
            _logger.LogDebug("Application has been stoped.");
        }
    }
}
